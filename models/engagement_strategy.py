"""Engagement strategy model for StrategyAgent."""
from pydantic import BaseModel, Field
from typing import List, Optional
from enum import Enum


class EngagementApproach(str, Enum):
    """Engagement approach strategies."""
    RESEARCH_FIRST = "research_first"  # Research → Qualify → Engage
    QUALIFY_AND_EMAIL = "qualify_and_email"  # Qualify → Email immediately
    IMMEDIATE_CALL = "immediate_call"  # Qualify → Call immediately (HOT leads)
    NURTURE_SEQUENCE = "nurture_sequence"  # Qualify → Multi-touch sequence


class ChannelPriority(str, Enum):
    """Communication channel priorities."""
    EMAIL = "email"
    SMS = "sms"
    CALL = "call"
    LINKEDIN = "linkedin"


class PersonalizationLevel(str, Enum):
    """Personalization levels for engagement."""
    GENERIC = "generic"  # Template-based
    TARGETED = "targeted"  # Tier-based customization
    CUSTOM = "custom"  # Fully personalized with research


class EngagementStrategy(BaseModel):
    """Strategic engagement plan for a lead.

    Generated by StrategyAgent to guide specialist agents.
    """

    # Core strategy
    approach: EngagementApproach = Field(
        description="Overall engagement approach"
    )

    # Delegation flags
    research_needed: bool = Field(
        default=False,
        description="Whether to delegate to ResearchAgent for enrichment"
    )
    qualification_needed: bool = Field(
        default=True,
        description="Whether to delegate to InboundAgent for qualification"
    )

    # Channel strategy
    channel_priority: List[ChannelPriority] = Field(
        default=[ChannelPriority.EMAIL, ChannelPriority.SMS, ChannelPriority.CALL],
        description="Ordered list of channels to use"
    )

    # Personalization
    personalization_level: PersonalizationLevel = Field(
        default=PersonalizationLevel.TARGETED,
        description="Level of personalization for engagement"
    )

    # Timing
    immediate_action: bool = Field(
        default=True,
        description="Whether to engage immediately or schedule"
    )

    # Strategic reasoning
    reasoning: Optional[str] = Field(
        default=None,
        description="Strategic reasoning for this approach"
    )

    # Metadata
    confidence: float = Field(
        default=0.8,
        ge=0.0,
        le=1.0,
        description="Confidence in this strategy (0-1)"
    )
